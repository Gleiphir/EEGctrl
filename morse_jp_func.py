from collections import OrderedDict
import re
MorseMapping = OrderedDict({
"－－・－－":"ア",
"・－・・":"カ",
"－・－・－":"サ",
"－・":"タ",
"・－・":"ナ",
"－・・・":"ハ",
"－・・－":"マ",
"・－－":"ヤ",
"・・・":"ラ",
"－・－":"ワ",
"・－":"イ",
"－・－・・":"キ",
"－－・－・":"シ",
"・・－・":"チ",
"－・－・":"ニ",
"－－・・－":"ヒ",
"・・－・－":"ミ",
"－－・":"リ",
"・－・・－":"〇",
"・・－":"ウ",
"・・・－":"ク",
"－－－・－":"ス",
"・－－・":"ツ",
"・・・・":"ヌ",
"－－・・":"フ",
"－":"ム",
"－・・－－":"ユ",
"－・－－・":"ル",
"・－・－・":"ン",
"－・－－－":"エ",
"－・－－":"ケ",
"・－－－・":"セ",
"・－・－－":"テ",
"－－・－":"ネ",
"・":"ヘ",
"－・・・－":"メ",
"－－－":"レ",
"・－－・・":"✖",
"・－・・・":"オ",
"－－－－":"コ",
"－－－・":"ソ",
"・・－・・":"ト",
"・・－－":"ノ",
"－・・":"ホ",
"－・・－・":"モ",
"－－":"ヨ",
"・－・－":"ロ",
"・－－－":"ヲ",
"・・":"゛",
"・・－－・":"゜",
"・－・－・・":"。",
"・－－・－":"ー",
"・－・－・－":"←",
"－・－－・－":"（",
"・－・・－・":"）",
"－－－－－":"0",
"・－－－－":"1",
"・・－－－":"2",
"・・・－－":"3",
"・・・・－":"4",
"・・・・・":"5",
"－・・・・":"6",
"－－・・・":"7",
"－－－・・":"8",
"－－－－・":"9",
"－－・・－－":",",
"・・－－・・":"?",
"・－－－－・":"\'",
"－・－・－－":"!",
"－－－・・・":":",
"－・－・－・":"入",
"－・・・・－":"-",
"・・－－・－":"_",
"・・・－・・－":"消",
"・－－・－・":"@",
"－－・・・－":"礼"
})

def NearestHint(pattern:str = "",pick_num = -1):
    candidates = [ key for key in MorseMapping if re.match("^"+ pattern,key)]
    candidates.sort(key = lambda x:len(x))
    lst =  [ (c,MorseMapping[c]) for c in  candidates]
    if pick_num < 0 :
        return lst
    if len(lst) < pick_num:
        """
        for i in range(pick_num - len(lst)):
            lst.append(("",""))
        """
        return lst
    else:
        return lst[:pick_num]

if __name__ == '__main__':
    print(NearestHint("・－"))
